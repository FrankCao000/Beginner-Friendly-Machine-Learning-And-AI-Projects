import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer

# Load the datasets
movies = pd.read_csv('movies.csv')
ratings = pd.read_csv('ratings.csv')

# Merge datasets
data = pd.merge(ratings, movies, on='movieId')

# Create a user-movie matrix
user_movie_matrix = data.pivot_table(index='userId', columns='title', values='rating')

# Fill NaN values with 0 (assume unrated movies as 0)
user_movie_matrix.fillna(0, inplace=True)

# Compute cosine similarity between movies
movie_similarity = cosine_similarity(user_movie_matrix.T)
movie_similarity_df = pd.DataFrame(movie_similarity, index=user_movie_matrix.columns, columns=user_movie_matrix.columns)

# Function to recommend movies based on input
def recommend_movies(movie_title, num_recommendations=5):
    if movie_title not in movie_similarity_df.columns:
        return f"'{movie_title}' is not in the dataset. Please check the movie title."
    
    # Get similarity scores for the movie
    similar_movies = movie_similarity_df[movie_title].sort_values(ascending=False)[1:num_recommendations+1]
    return similar_movies

# Example usage
print("Recommended movies:")
movie_to_search = input("Enter a movie title: ")
recommendations = recommend_movies(movie_to_search)
print(recommendations)
